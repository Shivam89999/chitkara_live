<link rel="stylesheet" href="/css/new_post.css" />

<div id="new-post" style="width: 40%; max-width: 40%">
    <div id="img-container">
        <img src="<%=post.creator.pic%>" alt="" height="65px" width="65px" style="border-radius: 50%" />
    </div>
    <h3>Event Location</h3>
    <%var location= post.venu;%>
        <div>
            <form>
                <div style="
          justify-content: flex-start;
          align-items: flex-end;
          position: relative;
        ">
                    <a href="/" style="text-decoration: none; color: black">
                        <%if(post.photos){%>
                            <img src="<%=post.photos[0]%>" alt="photo" height="200px" width="160px" />
                            <%}else{%>
                                <span style="text-align: center" heigh="100px" width="80px"><%=post.content%></span
          >
          <%}%></a
        >
        <%if(post.photos && post.photos.length>1){%>
        <span
          style="
            padding: 1px 2px 1px 2px;
            border-radius: 25px;
            background-color: #413f3fc9;
            color: white;
            position: absolute;
            top: 10px;
            left: 10px;
          "
          >1/<%=post.photos.length%></span
        >
        <%}%>
        <span style="padding-left: 5px"><%=post.caption%></span>
                </div>
                <div style="font-size: 21; color: yellowgreen; padding-bottom: 20px">
                    Location Name, Will Update Soon
                </div>
                <div style="display: none; text-align: center; color: red" id="venu-error"></div>
                <div id="show-location" style="height: 300px; margin: auto"></div>
            </form>
        </div>
</div>
<script src="https://maps.google.com/maps/api/js?sensor=true;"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
    //key=AIzaSyAIspBW0Ij2hR2FXso6mU7FXOyHrYFUc_0

    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition, showError);
    } else {
        showPosition();
    }

    function showError(err) {
        const venuError = document.getElementById("venu-error");
        venuError.style.display = "inline-block";
        document.getElementById("show-location").style.display = "none";
        switch (err.code) {
            case err.PERMISSION_DENIED:
                venuError.innerText =
                    "You denied the request for Geolocation . Allow First and refresh the page ";
                break;
            case err.POSITION_UNAVAILABLE:
                venuError.innerText = "Your location information is unavailable.";
                break;
            case err.TIMEOUT:
                venuError.innerText = "The request to get Your location timed out.";
                break;
            case err.UNKNOWN_ERROR:
                venuError.innerText = "An unknown error occurred.";
                break;
        }
    }

    function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {
        var R = 6371; // Radius of the earth in km
        var dLat = deg2rad(lat2 - lat1); // deg2rad below
        var dLon = deg2rad(lon2 - lon1);
        var a =
            Math.sin(dLat / 2) * Math.sin(dLat / 2) +
            Math.cos(deg2rad(lat1)) *
            Math.cos(deg2rad(lat2)) *
            Math.sin(dLon / 2) *
            Math.sin(dLon / 2);
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        var d = R * c; // Distance in km
        d = parseFloat("" + d).toFixed(2);
        return d;
    }

    function deg2rad(deg) {
        return deg * (Math.PI / 180);
    }

    function showPosition(position) {
        const venuError = document.getElementById("venu-error");
        venuError.style.display = "none";
        // const venuError = document.getElementById("venu-error");
        // venuError.style.display = "none";
        // document.getElementById("show-location").style.display = "inline-block";
        // // console.log("position is ", position);
        // const venu = document.getElementById("venu");
        // const venuSpan = document.getElementById("venu-span");
        // venuSpan.innerText = "Clear";
        let coordinates = "<%=location%>";
        coordinates = coordinates.split(",");
        let lett = position.coords.latitude;
        var longi = position.coords.longitude;
        console.log("lett is ", lett, " longi is ", longi);
        // venu.value = lett + "," + longi;
        var lattlong = new google.maps.LatLng(lett, longi);
        console.log("let long is ****** ", lattlong);
        var myOptions = {
            center: lattlong,
            zoom: 5,
            mapTypeControl: true,
            navigationControlOptions: {
                style: google.maps.NavigationControlStyle.SMALL,
            },
        };
        var maps = new google.maps.Map(
            document.getElementById("show-location"),
            myOptions
        );
        var markers = new google.maps.Marker({
            position: lattlong,
            map: maps,
            title: "you are here",
            draggable: true,
        });
        markers.setMap(maps);
        let distance = getDistanceFromLatLonInKm(
            lett,
            longi,
            parseFloat(coordinates[0]),
            parseFloat(coordinates[1])
        );
        // Create the initial InfoWindow.
        let infoWindow = new google.maps.InfoWindow({
            content: "You are here, and " +
                distance +
                " KM away from event location Click the map to change your current location " +
                markers.getPosition(),
            position: lattlong,
        });
        console.log("coordinates &&&&&&&&& ", coordinates);
        let loctionWindow = new google.maps.InfoWindow({
            content: "Event is here",
            position: new google.maps.LatLng(
                parseFloat(coordinates[0]),
                parseFloat(coordinates[1])
            ),
        });
        var Eventmarkers = new google.maps.Marker({
            position: new google.maps.LatLng(
                parseFloat(coordinates[0]),
                parseFloat(coordinates[1])
            ),
            map: maps,
            draggable: true,
            title: "Event is here",
        });
        Eventmarkers.setMap(maps);
        infoWindow.open(maps);
        loctionWindow.open(maps);
        const geocoder = new google.maps.Geocoder();
        // Configure the click listener.
        maps.addListener("click", (mapsMouseEvent) => {
            // Close the current InfoWindow.
            infoWindow.close();
            // Create a new InfoWindow.
            infoWindow = new google.maps.InfoWindow({
                position: mapsMouseEvent.latLng,
            });
            console.log("vfhhvf ", mapsMouseEvent.latLng.toString());
            let latlngObj = {
                lat: mapsMouseEvent.latLng.lat(),
                lng: mapsMouseEvent.latLng.lng(),
            };
            distance = getDistanceFromLatLonInKm(
                latlngObj.lat,
                latlngObj.lng,
                parseFloat(coordinates[0]),
                parseFloat(coordinates[1])
            );
            markers.setPosition(new google.maps.LatLng(latlngObj.lat, latlngObj.lng));
            // console.log("jvdjbvjbdvbd ", latlngObj);
            infoWindow.setContent(
                // JSON.stringify(mapsMouseEvent.latLng.toJSON(), null, 2)
                "your new location here, lat: " +
                latlngObj.lat +
                ",  lng: " +
                latlngObj.lng +
                " you are " +
                distance +
                " KM away from event"
            );
            // venu.value = latlngObj.lat + "," + latlngObj.lng;
            infoWindow.open(maps);
            // getAddress(latlngObj);
        });
        //use it using api key
        // function getAddress(obj) {
        //     geocoder
        //         .geocode({
        //             location: obj,
        //         })
        //         .then((response) => {
        //             if (response.results[0]) {
        //                 maps.setZoom(11);
        //                 infoWindow.close();
        //                 const marker = new google.maps.Marker({
        //                     position: obj,
        //                     map: maps,
        //                 });

        //                 infowindow.setContent(response.results[0].formatted_address);
        //                 infowindow.open(maps, marker);
        //             } else {
        //                 window.alert("No results found");
        //             }
        //         })
        //         .catch((e) => window.alert("Geocoder failed due to: " + e));
        // }
    }
</script>